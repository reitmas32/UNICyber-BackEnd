// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Oswaldo Rafael Zamora Ramirez",
            "url": "https://github.com/reitmas32",
            "email": "rafa.zamora.rals@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/computer": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computers"
                ],
                "summary": "get a item of the computers",
                "operationId": "get-computer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Computer",
                        "name": "id-computer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computers"
                ],
                "summary": "update a item of the computers",
                "operationId": "put-computer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Computer",
                        "name": "id-computer",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema by Update New Computer",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ComputerUpdateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computers"
                ],
                "summary": "add a new item of the computers",
                "operationId": "create-computer",
                "parameters": [
                    {
                        "description": "Schema by Create New Computer",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ComputerCreateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computers"
                ],
                "summary": "delete a item of the computers",
                "operationId": "delete-computer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Computer",
                        "name": "id-computer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/computer-lab": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computer Lab"
                ],
                "summary": "get a item of the computer-lab",
                "operationId": "get-computer-lab",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of ComputerLab",
                        "name": "id-computer-lab",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computer Lab"
                ],
                "summary": "update a item of the computer-lab",
                "operationId": "put-computer-lab",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del item",
                        "name": "id-computer-lab",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema by Update New Computer Lab",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ComputerLabUpdateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computer Lab"
                ],
                "summary": "add a new item of the computer-lab",
                "operationId": "create-computer-lab",
                "parameters": [
                    {
                        "description": "Schema by Create New Computer Lab",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ComputerLabCreateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Computer Lab"
                ],
                "summary": "delete a item of the computer-lab",
                "operationId": "delete-computer-lab",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del item",
                        "name": "id-computer-lab",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/room": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "get a item of the rooms",
                "operationId": "get-room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Room",
                        "name": "id-room",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "update a item of the rooms",
                "operationId": "put-room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Room",
                        "name": "id-room",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema by Update New Room",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RoomUpdateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "add a new item of the rooms",
                "operationId": "create-room",
                "parameters": [
                    {
                        "description": "Schema by Create New Room",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RoomCreateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "delete a item of the rooms",
                "operationId": "delete-room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Room",
                        "name": "id-room",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/student": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "get a item of the students",
                "operationId": "get-student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Student",
                        "name": "id-student",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "update a item of the students",
                "operationId": "put-student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Students",
                        "name": "id-student",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema by Update New Student",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.StudentUpdateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "add a new item of the students",
                "operationId": "create-student",
                "parameters": [
                    {
                        "description": "Schema by Create New Student",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.StudentCreateSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "delete a item of the students",
                "operationId": "delete-student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Student",
                        "name": "id-student",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Response": {
            "type": "object",
            "properties": {
                "Data": {},
                "Message": {
                    "type": "string"
                },
                "Success": {
                    "type": "boolean"
                }
            }
        },
        "schemas.ComputerCreateSchema": {
            "type": "object",
            "properties": {
                "id_room": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.ComputerLabCreateSchema": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ComputerLabUpdateSchema": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "Data",
                    "type": "string"
                }
            }
        },
        "schemas.ComputerUpdateSchema": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "description": "Data",
                    "type": "string"
                },
                "pos_x": {
                    "description": "UI",
                    "type": "number"
                },
                "pos_y": {
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.RoomCreateSchema": {
            "type": "object",
            "properties": {
                "id_computer_lab": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.RoomUpdateSchema": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "name": {
                    "description": "Data",
                    "type": "string"
                }
            }
        },
        "schemas.StudentCreateSchema": {
            "type": "object",
            "required": [
                "account_number",
                "last_name",
                "name",
                "semester",
                "university_program"
            ],
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "description": "Info Personal",
                    "type": "string"
                },
                "semester": {
                    "type": "integer"
                },
                "university_program": {
                    "description": "Info Academic",
                    "type": "string"
                }
            }
        },
        "schemas.StudentUpdateSchema": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "description": "Info Personal",
                    "type": "string"
                },
                "semester": {
                    "type": "integer"
                },
                "university_program": {
                    "description": "Info Academic",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "UNICyber-API",
	Description:      "This is a API by System UNICyber|SISEC https://github.com/reitmas32/UNICyber-BackEnd",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
